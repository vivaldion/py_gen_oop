"""Реализуйте класс Vector, описывающий вектор на плоскости. При создании экземпляра класс должен принимать два аргумента в следующем порядке:

x — координата вектора по оси
x
x
y — координата вектора по оси
y
y
Экземпляр класса Vector должен иметь следующее неформальное строковое представление:

(<координата x>, <координата y>)
Также экземпляр класса Vector должен поддерживать приведение к типам bool, int, float и complex:

при приведении к типу bool значением вектора должно являться значение True, если хотя бы одна его координата не равна нулю, или False в противном случае
при приведении к типу int значением вектора должен являться его модуль в виде целого числа с отброшенной дробной частью
при приведении к типу float значением вектора должен являться его модуль в виде вещественного числа
при приведении к типу complex значением вектора должно являться комплексное число, вещественная часть которого равна координате вектора по оси
x
x, мнимая часть — координате вектора по оси
y
y
Примечание 1. Модуль вектора с координатами
(
x
,
y
)
(x,y) вычисляется по формуле
x
2
+
y
2
x
2
 +y
2

​
 .

Примечание 2. Дополнительная проверка данных на корректность не требуется. Гарантируется, что реализованный класс используется только с корректными данными.

Примечание 3. Никаких ограничений касательно реализации класса Vector нет, она может быть произвольной.

Примечание 4. Тестовые данные доступны по ссылкам:"""
from math import sqrt

class Vector:
    def __init__(self, x, y):
        self.x = x
        self.y = y

    def __str__(self):
        return f'({self.x}, {self.y})'

    def __bool__(self):
        return abs(self.x) + abs(self.y) != 0

    def __int__(self):
        return int(sqrt(self.x ** 2 + self.y ** 2) // 1)

    def __float__(self):
        return (sqrt(self.x ** 2 + self.y ** 2))

    def __complex__(self):
        return complex(self.x, self.y)