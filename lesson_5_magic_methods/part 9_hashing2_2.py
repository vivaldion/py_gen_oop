"""Реализуйте класс Row, описывающий объект, содержащий произвольный набор атрибутов. При создании экземпляра класс должен принимать произвольное количество именованных аргументов и устанавливать их в качестве атрибутов создаваемому экземпляру.

Класс Row должен запрещать устанавливать новые атрибуты своим экземплярам. Помимо этого класс должен запрещать изменять значения уже имеющихся атрибутов, а также удалять их. При попытке установить новый атрибут должно возбуждаться исключение AttributeError с текстом:

Установка нового атрибута невозможна
При попытке изменить значение уже имеющегося атрибута должно возбуждаться исключение AttributeError с текстом:

Изменение значения атрибута невозможно
При попытке удалить атрибут должно возбуждаться исключение AttributeError с текстом:

Удаление атрибута невозможно
Экземпляр класса Row должен иметь следующее формальное строковое представление:

Row(<имя 1-го атрибута>=<значение 1-го атрибута>, <имя 2-го атрибута>=<значение 2-го атрибута>, ...)
Также экземпляры класса Row должны поддерживать между собой операции сравнения с помощью операторов == и !=. Два экземпляра класса Row считаются равными, если их наборы атрибутов полностью совпадают, то есть совпадает их количество, позиции, имена и соответствующие значения.

Наконец, при передаче экземпляра класса Row в функцию hash() должно возвращаться его хеш-значение. Алгоритм вычисления хеш-значения может быть произвольным, однако он должен учитывать все атрибуты экземпляра, их позиции, имена и соответствующие значения

Примечание 1. Гарантируется, что значениями атрибутов экземпляров класса Row являются хешируемые объекты.

Примечание 2. Обратите внимание, что в формальном строковом представлении значения атрибутов, которые принадлежат типу str, должны быть обрамлены апострофами.

Примечание 3. Если объект, с которым происходит сравнение, некорректен, метод, реализующий операцию сравнения, должен вернуть константу NotImplemented.

Примечание 4. Никаких ограничений касательно реализации класса Row нет, она может быть произвольной.

Примечание 5. Тестовые данные доступны по ссылкам:"""


class Row:
    def __init__(self, **kwargs):
        self.__dict__.update(kwargs)

    def __setattr__(self, key, value):
        if key in self.__dict__.keys():
            raise AttributeError('Изменение значения атрибута невозможно')
        raise AttributeError('Установка нового атрибута невозможна')

    def __delattr__(self, item):
        raise AttributeError('Удаление атрибута невозможно')

    def __repr__(self):
        return "Row(" + ", ".join(f"{k}={repr(v)}" for k, v in self.__dict__.items()) + ")"

    def __eq__(self, other):
        if isinstance(other, Row):
            return tuple(self.__dict__.items()) == tuple(other.__dict__.items())
        return NotImplemented

    def __hash__(self):
        return hash(tuple(self.__dict__.items()))

row = Row(a=1, b=2, c=3)

try:
    row.a = 10
except AttributeError as e:
    print(e)