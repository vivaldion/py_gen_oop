'''Квадратный трехчлен — это многочлен вида
a
x
2
+
b
x
+
c
ax
2
 +bx+c, где
a
≠
0
a

=0. Например:
x
2
+
1
x
2
−
5
x
+
6
x
2
 +1
x
2
 −5x+6
Реализуйте класс QuadraticPolynomial, описывающий квадратный трехчлен. При создании экземпляра класс должен принимать три аргумента в следующем порядке:

a — коэффициент
a
a квадратного трехчлена
b — коэффициент
b
b квадратного трехчлена
c — коэффициент
c
c квадратного трехчлена
Экземпляр класса QuadraticPolynomial должен иметь три атрибута:

a — коэффициент
a
a квадратного трехчлена
b — коэффициент
b
b квадратного трехчлена
c — коэффициент
c
c квадратного трехчлена
Класс QuadraticPolynomial должен иметь два метода класса:

from_iterable() — метод, принимающий в качестве аргумента итерируемый объект из трех элементов a, b и c, которые представляют коэффициенты квадратного трехчлена, и возвращающий экземпляр класса QuadraticPolynomial, созданный на основе переданных коэффициентов
from_str() — метод, принимающий в качестве аргумента строку, которая содержит коэффициенты a, b и c квадратного трехчлена, записанные через пробел. Метод должен возвращать экземпляр класса QuadraticPolynomial, созданный на основе переданных коэффициентов, предварительно преобразованных в экземпляры класса float '''

class QuadraticPolynomial:
    def __init__(self, a, b, c):
        self.a = a
        self.b = b
        self.c =c

    @classmethod
    def from_iterable(cls, args):
        return cls(*args)
    @classmethod
    def from_str(cls, args: str):
        args = map(float, args.split())
        return cls(*args)

