"""
Реализуйте класс BirthdayDict, наследника класса UserDict, описывающий словарь с информацией о днях рождения, ключами в котором являются имена, а значениями — даты дней рождения. Процесс создания экземпляра класса BirthdayDict должен совпадать с процессом создания экземпляра класса UserDict.

При добавлении новой пары ключ: значение в экземпляр класса BirthdayDict должна производиться проверка на наличие в этом экземпляре пары, которая имеет такое же значение, что и добавляемая пара. И если такая пара есть, должен выводиться текст:

Хей, <ключ добавляемой пары>, не только ты празднуешь день рождения в этот день!
Аналогичное поведение должно быть и при изменении значения по ключу.

Примечание 1. Дополнительная проверка данных на корректность не требуется. Гарантируется, что реализованный класс используется только с корректными данными.

Примечание 2. Никаких ограничений касательно реализации класса BirthdayDict нет, она может быть произвольной.
"""


from collections import UserDict


class BirthdayDict(UserDict):
    def __setitem__(self, key, value):
        if not value in self.data.values():
            self.data[key] = value
        else:
            print(f'Хей, {key}, не только ты празднуешь день рождения в этот день!')